#+title: Emacs 从头开始
#+author: Dylan Yang

今天读了一篇文章 怎么学习 Emacs ?
如何达到真正融汇贯通的境界?

为什么我一直都不能利用 Emacs 让我的工作变得更快速？
不像许多大神据说的， Emacs 让工作和开发效率提高？

这一切的原因都是因为对 Emacs 的理解太少了，但是按照大神的方案来看的貌
似有点难，毕竟是1241页英文文档。

没办法，在英文面前，我又一次摔倒了。但是我对现在的 Emacs 配置有了一个
新的想法，也许我不应该再过多的依赖别人的配置了。

试用了一天的 Emacs 之后，感觉自己的小指要断了，看来，对于 Emacs 来说，
小指的负担还是太重了。

* 知道自己想要的功能

在使用了一段时间之后，我发现我其实经常使用的功能就是几个。

- 笔记 :: 用来记录自己要做什么，在做什么，做过什么的地方
- 计划 :: 记录自己的工作或者一些生活上的思考
- 博客 :: 将遇到的问题的解决方法做成笔记，发布到 GitHub 上
- 开发 :: 主要写 Python 和 Web 相关的代码

再经过一段时间的使用之后，对于我来说，最需要的 package 就是：

1. Org Mode : 记笔记，做计划，写博客 (配合 ox-hugo) ，等所有的内容，都可以使用。
2. Magit : 开发的时候做代码管理，可以说是非常好用的一个功能，几乎是 Emacs 神器。

所以在这次从头开始的配置中，第一个需要的就是 Org Mode + Magit 。

* 为自己想要的功能增加对应的快捷键

也许这不是最好的方法，但确是对我来说最适合的配置。而且快捷键的配置也主
要只针对比较重要的插件，其它的都放到 other 的配置中。

** Org mode

- C-c a :: 打开 agenda
- C-c o :: 启动 org-capture
- C-c b :: 在 org buffer 间切换

** Magit

- C-x g :: 启动 Magit
           
** other

*** emacs lisp mode 

- C-x C-x :: ielm
- C-c C-c :: eval defun
- C-c C-b :: eval buffer

*** elfeed

- C-x w e :: 启动 elfeed

*** meltiple-cursors

- C-S-c C-S-c :: mc/edit-lines
- C-> :: mc/mark-next-like-this
- C-< :: mc/mark-previous-like-this
- C-c C-< :: mc/mark-all-like-this
- C-M-> :: mc/skip-to-next-like-this
- C-M-< :: mc/skip-to-previous-like-this

- C-| :: mc/vertical-align-with-space
